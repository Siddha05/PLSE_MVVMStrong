<Application x:Class="PLSE_MVVMStrong.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PLSE_MVVMStrong"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             StartupUri="View/Profile.xaml" ShutdownMode="OnLastWindowClose">
    <Application.Resources>
        <local:TextConverter x:Key="TextConverter" />
        <BooleanToVisibilityConverter x:Key="BVConv"/>
        <system:Double x:Key="RegularFontSize">12</system:Double>
        <system:Double x:Key="UIFontSize">14</system:Double>
        <system:Double x:Key="HeaderFontSize">20</system:Double>
        <system:Double x:Key="UIHeigth">28</system:Double>
        <system:Double x:Key="UIWidth">180</system:Double>

        <SolidColorBrush x:Key="UnselectedControl" Color="Gray"/>
        <SolidColorBrush x:Key="SelectedControl" Color="#FF0B0B9E"/> <!--#FF549EE8-->
        <SolidColorBrush x:Key="MouseOverControl" Color="#FFD6F8FD"/>
        <SolidColorBrush x:Key="ExitColor" Color="#FFDA7B1D"/>
        <SolidColorBrush x:Key="SaveEnterColor" Color="#FF89C330"/>

        <BitmapImage x:Key="lens" UriSource="Resources\lens.jpg" SourceRect="210 10 480 480"/>
        

        <ControlTemplate x:Key="tbAdditonText" TargetType="TextBox">
            <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Name="grid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Name="block" Text="{TemplateBinding Tag}" Padding="10,0,0,0" Focusable="False" TextAlignment="Left"
                           Width="{Binding ElementName=grid, Path=ActualWidth}" Height="{Binding ElementName=grid, Path=ActualHeight}"
                                   FontStyle="Italic" FontWeight="Thin" FontSize="{TemplateBinding FontSize}" Background="{TemplateBinding Background}" />
                <TextBox Name="box" Background="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource TextConverter}}"
                                 FontSize="{TemplateBinding FontSize}" FontWeight="Normal" FontStyle="Normal" Style="{x:Null}" TextAlignment="Left" Panel.ZIndex="2"
                                 Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                </TextBox>
            </Grid>
        </ControlTemplate>
        <DataTemplate x:Key="ListBoxItem_Info">
            <StackPanel Orientation="Horizontal">
                <Viewbox Margin="1" Height="40" Width="40" VerticalAlignment="Center">
                    <Image Source="{Binding Path=Type, Converter={StaticResource MsgTypeConv}, Mode=OneWay}" />
                </Viewbox>
                <TextBlock HorizontalAlignment="Center" Style="{x:Null}" FontSize="18" FontStyle="Normal" Width="520"
                                       FontWeight="SemiBold" Text="{Binding Path=Msg, Mode=OneWay}"
                                       VerticalAlignment="Center" Margin="10,0,0,0" TextWrapping="Wrap" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ListBox_Customer">
            <StackPanel Orientation="Vertical">
                <TextBlock Style="{x:Null}" FontSize="14" FontWeight="Normal">
                    <Run Text="{Binding Office, Mode=OneWay, StringFormat={}{0} }" />
                    <Run FontSize="16" FontWeight="DemiBold" Text="{Binding Fio, Mode=OneWay}" />
                    <LineBreak />
                    <Run Text="{Binding Path=Rank, Mode=OneWay, TargetNullValue=без звания}" />
                    <LineBreak />
                    <Run Text="{Binding Path=Departament, Mode=OneWay, StringFormat={}{0} }" />
                    <Run Text="{Binding Path=Organization, Mode=OneWay}" />
                </TextBlock>
            </StackPanel>
        </DataTemplate>

        <Style TargetType="{x:Type TextBox}" x:Key="UITextBox">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontSize" Value="{StaticResource UIFontSize}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="MinWidth" Value="270" />
            <Setter Property="Height" Value="auto" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="1" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <Binding RelativeSource="{RelativeSource Self}" Path="(Validation.Errors)[0].ErrorContent" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="UITextBlock">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontSize" Value="{StaticResource UIFontSize}" />
            <Setter Property="FontWeight" Value="DemiBold" />
            <Setter Property="Height" Value="{StaticResource UIHeigth}" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            

        </Style>
        <Style TargetType="{x:Type DatePicker}" x:Key="UIDatePicker">
            <Setter Property="FontSize" Value="{StaticResource UIFontSize}" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="MinWidth" Value="{StaticResource UIWidth}" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Height" Value="{StaticResource UIHeigth}" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <Binding RelativeSource="{RelativeSource Self}" Path="(Validation.Errors)[0].ErrorContent" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ComboBox" x:Key="UIComboBox">
            <Setter Property="FontSize" Value="{StaticResource UIFontSize}" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="MinWidth" Value="{StaticResource UIWidth}" />
            <Setter Property="Height" Value="{StaticResource UIHeigth}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
        <Style TargetType="Button" x:Key="BaseUIButton">
            <Setter Property="Width" Value="85" />
            <Setter Property="Height" Value="35" />
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ForceCursor" Value="True"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
            <Setter Property="ToolTipService.ShowDuration" Value="3000"/>
            <Setter Property="BorderBrush" Value="{StaticResource UnselectedControl}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="brd" BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="Black">
                            <Grid>
                                <Path Name="path" Fill="Transparent">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathFigure StartPoint="0,0" IsClosed="True">
                                                <LineSegment Point="10,0"/>
                                                <LineSegment Point="0,10"/>
                                            </PathFigure>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                                <TextBlock Name="tb" Style="{x:Null}" Text="{TemplateBinding Content}" TextAlignment="Center" Foreground="{TemplateBinding Foreground}" 
                                       VerticalAlignment="Center" FontSize="{StaticResource UIFontSize}" FontWeight="Bold" RenderTransformOrigin="0.5, 0.5">
                                    <TextBlock.RenderTransform>
                                        <ScaleTransform x:Name="trs"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="brd" Property="BorderBrush" Value="#FF2222FB"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleX" To="1.1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleY" To="1.1" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsDefault" Value="true">
                                <Setter TargetName="path" Property="Fill" Value="#FF3AD333"/>
                            </Trigger>
                            <Trigger Property="IsCancel" Value="true">
                                <Setter TargetName="path" Property="Fill" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="tb" Property="Foreground" Value="Gray"/>
                                <Setter TargetName="brd" Property="BorderBrush" Value="Gray"/>
                                <!--<Setter TargetName="path" Property="Fill" Value="gray"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style BasedOn="{StaticResource BaseUIButton}" TargetType="{x:Type Button}" x:Key="ButtonExit">
            <Setter Property="Content" Value="Выход"/>
            <Setter Property="Foreground" Value="#FFD4681A"/>
            <Setter Property="IsCancel" Value="True"/>
            <Setter Property="ToolTip" Value="Закрыть окно"/>
        </Style>
        <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleValid" x:Shared ="false">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsThreeState" Value="False"/>
           
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Name="brd" BorderThickness="1" BorderBrush="#FFC7C6C6" Background="White" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <TextBlock Style="{x:Null}" Name="tbc" Text="Действует" FontSize="{StaticResource UIFontSize}" FontWeight="DemiBold" 
                                       Foreground="GreenYellow" Margin="5,10,5,10" TextAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="brd" Property="BorderBrush" Value="#FF346DE8"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="tbc" Property="Text" Value="Не действует"/>
                                <Setter TargetName="tbc" Property="Foreground" Value="Red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="SearchButton">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Ellipse Name="el" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" RenderTransformOrigin=".5,.5" Stroke="White" StrokeThickness="2">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="{StaticResource lens}" Stretch="Fill"/>
                            </Ellipse.Fill>
                            <Ellipse.RenderTransform>
                                <ScaleTransform x:Name="trs"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter Property="ForceCursor" Value="True"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="el" Property="Fill">
                                    <Setter.Value>
                                        <ImageBrush Stretch="Fill">
                                            <ImageBrush.ImageSource>
                                                <FormatConvertedBitmap Source="{StaticResource lens}" DestinationFormat="Gray32Float"/>
                                            </ImageBrush.ImageSource>
                                        </ImageBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="WordButton">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" RenderTransformOrigin=".5,.5" Stroke="White" StrokeThickness="2">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="Resources/Word.png" Stretch="Fill"/>
                            </Ellipse.Fill>
                            <Ellipse.RenderTransform>
                                <ScaleTransform x:Name="trs"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter Property="ForceCursor" Value="True"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="DeleteButton">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ToolTip" Value="Удалить"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Ellipse Name="el"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" RenderTransformOrigin=".5,.5" Stroke="White" StrokeThickness="2">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="Resources\delete.png" Stretch="Fill"/>
                            </Ellipse.Fill>
                            <Ellipse.RenderTransform>
                                <ScaleTransform x:Name="trs"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter Property="ForceCursor" Value="True"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="el" Property="Fill">
                                    <Setter.Value>
                                        <ImageBrush Stretch="Fill">
                                            <ImageBrush.ImageSource>
                                                <FormatConvertedBitmap Source="Resources\delete.png" DestinationFormat="Gray32Float"/>
                                            </ImageBrush.ImageSource>
                                        </ImageBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="AddItemButton">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ToolTip" Value="Добавить"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Ellipse Name="el" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" RenderTransformOrigin=".5,.5" Stroke="White" StrokeThickness="2">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="Resources\additem.png" Stretch="Fill" RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.ClearTypeHint="Enabled"/>
                            </Ellipse.Fill>
                            <Ellipse.RenderTransform>
                                <ScaleTransform x:Name="trs"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter Property="ForceCursor" Value="True"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="el" Property="Fill">
                                    <Setter.Value>
                                        <ImageBrush Stretch="Fill">
                                            <ImageBrush.ImageSource>
                                                <FormatConvertedBitmap Source="Resources\additem.png" DestinationFormat="Gray32Float"/>
                                            </ImageBrush.ImageSource>
                                        </ImageBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="EditButton">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ToolTip" Value="Редактировать"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Ellipse Name="el" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" RenderTransformOrigin=".5,.5" Stroke="White" StrokeThickness="2">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="Resources\edit.png" Stretch="Fill" RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.ClearTypeHint="Enabled"/>
                            </Ellipse.Fill>
                            <Ellipse.RenderTransform>
                                <ScaleTransform x:Name="trs"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="trs" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter Property="ForceCursor" Value="True"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="el" Property="Fill">
                                    <Setter.Value>
                                        <ImageBrush Stretch="Fill">
                                            <ImageBrush.ImageSource>
                                                <FormatConvertedBitmap Source="Resources\edit.png" DestinationFormat="Gray32Float"/>
                                            </ImageBrush.ImageSource>
                                        </ImageBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}" x:Key="SearchTextBox">
            <Setter Property="FontSize" Value="{StaticResource UIFontSize}" />
            <Setter Property="Height" Value="{StaticResource UIHeigth}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Tag" Value="Введите текст для поиска" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Name="grid">
                            <TextBlock Name="block" Text="{TemplateBinding Tag}" Padding="5,0,0,0" Focusable="False" TextAlignment="Left" Style="{x:Null}"
                                   Width="{Binding ElementName=grid, Path=ActualWidth}" Height="auto" Foreground="Gray"
                                   FontStyle="Italic" FontWeight="Thin" FontSize="{TemplateBinding FontSize}" Background="{TemplateBinding Background}" VerticalAlignment="Center"/>
                            <TextBox Name="box" Background="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource TextConverter}}"
                                 FontSize="{TemplateBinding FontSize}" FontWeight="Normal" FontStyle="Normal" Style="{x:Null}" TextAlignment="Left" Panel.ZIndex="2"
                                 Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ToggleButton}" x:Key="ArrowToggle">
            <Setter Property="ForceCursor" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Path Name="dd" StrokeThickness="3" Data="M0,0 14,7 0, 14 Z" Stretch="Fill" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5, 0.5">
                                <Path.RenderTransform>
                                    <RotateTransform x:Name="tr" Angle="0"/>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="tr" To="90" Duration="0:0:0.3" Storyboard.TargetProperty="Angle"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="tr" To="0" Duration="0:0:0.3" Storyboard.TargetProperty="Angle"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="DGColumnsHeader">
            <Setter Property="SeparatorBrush" Value="Black"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="{StaticResource HeaderFontSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Border Padding="0,3" BorderThickness="1,0,1,0" BorderBrush="{TemplateBinding SeparatorBrush}">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#FFFBCE80" />
                                    <GradientStop Offset="1" Color="#FFFBB132" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridRow}" x:Key="DGRowStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="brd" BorderThickness="2" BorderBrush="Blue" Margin="1,2,3,2" CornerRadius="3">
                            <!--<Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#FFEDF1F3" Offset="0"/>
                                    <GradientStop Color="#FFC9DCFD" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>-->
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <DataGridCellsPresenter Name = "prs" Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" 
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,5,0"/>
                                <DataGridDetailsPresenter Name="dp" Grid.Row="1" Grid.Column="1" Height="0" Visibility="Visible"
                                                                 SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" >
                                </DataGridDetailsPresenter>
                                <ToggleButton Name="tb" Grid.RowSpan="2" Style="{StaticResource ArrowToggle}" IsChecked="False" Height="25" Margin="5,5,2,5" 
                                                      Foreground="#FF6FD809"/>
                            </SelectiveScrollingGrid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="brd" Property="Control.Background" Value="{StaticResource MouseOverControl}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="brd" Property="Control.Background" Value="{StaticResource SelectedControl}"/>
                                <Setter TargetName="brd" Property="TextBlock.Foreground" Value="White"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding ElementName=tb, Path=IsChecked}" Value="true">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="dp" Storyboard.TargetProperty="Height" From="0" To="200" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="dp" Storyboard.TargetProperty="Height" To="0" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DataGridCell" x:Key="DGCellStyle">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ToolTip}" x:Key="CastomToolTip">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="StaysOpen" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolTip}">
                        <Border BorderBrush="#FF4B76EA" Background="White" CornerRadius="4" BorderThickness="1,1,1,1" MinHeight="50" >
                            <TextBlock VerticalAlignment="Center" Margin="2" Text="{TemplateBinding Content}" FontSize="{StaticResource RegularFontSize}" FontWeight="Normal" Foreground="Blue"
                                       TextWrapping="Wrap" MaxWidth="400"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}" x:Key="GreenCheck">
            <Setter Property="FontSize" Value="{StaticResource RegularFontSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Stroke="Black" Height="20" Width="20" VerticalAlignment="Center"/>
                            <Path x:Name="chk" Data="M19.949364,2.1748175 L9.3963195,16.174759 9.0430101,16.174759 0,9.2325122 2.5532038,6.2606848 8.509746,10.823652 16.666123,2.7126641E-05 19.949364,2.1748175 z" Fill="GreenYellow"
                                      Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Height="16" Margin="2.5,12" Width="20" Opacity="0"/>
                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Opacity" TargetName="chk" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Popup}" x:Key="SearchPopUp">
            
        </Style>
    </Application.Resources>
</Application>