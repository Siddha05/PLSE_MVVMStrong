<Application x:Class="PLSE_MVVMStrong.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PLSE_MVVMStrong"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             StartupUri="View\Login.xaml" ShutdownMode="OnLastWindowClose">
    <Application.Resources>
        <local:TextConverter x:Key="TextConverter" />
        <system:Double x:Key="RegularFontSize">16</system:Double>
        <system:Double x:Key="UIFontSize">18</system:Double>
        <system:Double x:Key="HeaderFontSize">24</system:Double>

        <SolidColorBrush x:Key="UnselectedControl" Color="Gray"/>
        <SolidColorBrush x:Key="SelectedControl" Color="#FF0B0B9E"/>
        <SolidColorBrush x:Key="ExitColor" Color="#FFDA7B1D"/>
        <SolidColorBrush x:Key="SaveEnterColor" Color="#FF89C330"/>

        <ControlTemplate x:Key="tbAdditonText" TargetType="TextBox">
            <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Name="grid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Name="block" Text="{TemplateBinding Tag}" Padding="10,0,0,0" Focusable="False" TextAlignment="Left"
                           Width="{Binding ElementName=grid, Path=ActualWidth}" Height="{Binding ElementName=grid, Path=ActualHeight}"
                                   FontStyle="Italic" FontWeight="Thin" FontSize="{TemplateBinding FontSize}" Background="{TemplateBinding Background}" />
                <TextBox Name="box" Background="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource TextConverter}}"
                                 FontSize="{TemplateBinding FontSize}" FontWeight="Normal" FontStyle="Normal" Style="{x:Null}" TextAlignment="Left" Panel.ZIndex="2"
                                 Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                </TextBox>
            </Grid>
        </ControlTemplate>
        <DataTemplate x:Key="ListBoxItem_Info">
            <StackPanel Orientation="Horizontal">
                <Viewbox Margin="1" Height="40" Width="40" VerticalAlignment="Center">
                    <Image Source="{Binding Path=Type, Converter={StaticResource MsgTypeConv}, Mode=OneWay}" />
                </Viewbox>
                <TextBlock HorizontalAlignment="Center" Style="{x:Null}" FontSize="18" FontStyle="Normal" Width="520"
                                       FontWeight="SemiBold" Text="{Binding Path=Msg, Mode=OneWay}"
                                       VerticalAlignment="Center" Margin="10,0,0,0" TextWrapping="Wrap" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ListBox_Customer">
            <StackPanel Orientation="Vertical">
                <TextBlock Style="{x:Null}" FontSize="14" FontWeight="Normal">
                    <Run Text="{Binding Office, Mode=OneWay, StringFormat={}{0} }" />
                    <Run FontSize="16" FontWeight="DemiBold" Text="{Binding Fio, Mode=OneWay}" />
                    <LineBreak />
                    <Run Text="{Binding Path=Rank, Mode=OneWay, TargetNullValue=без звания}" />
                    <LineBreak />
                    <Run Text="{Binding Path=Departament, Mode=OneWay, StringFormat={}{0} }" />
                    <Run Text="{Binding Path=Organization, Mode=OneWay}" />
                </TextBlock>
            </StackPanel>
        </DataTemplate>

        <Style TargetType="{x:Type TextBox}" x:Key="UITextBox">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontSize" Value="{StaticResource UIFontSize}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="MinWidth" Value="270" />
            <Setter Property="Height" Value="35" />
            <Setter Property="BorderThickness" Value="1" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <Binding RelativeSource="{RelativeSource Self}" Path="(Validation.Errors).CurrentItem.ErrorContent" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontSize" Value="{StaticResource UIFontSize}" />
            <Setter Property="FontWeight" Value="DemiBold" />
            <Setter Property="Height" Value="35" />
        </Style>
        <Style x:Key="HeaderTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="FontSize" Value="{StaticResource HeaderFontSize}" />
            <Setter Property="FontWeight" Value="DemiBold" />
        </Style>
        <Style TargetType="{x:Type DatePicker}" x:Key="UIDatePicker">
            <Setter Property="FontSize" Value="{StaticResource UIFontSize}" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="MinWidth" Value="220" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Height" Value="40" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <Binding RelativeSource="{RelativeSource Self}" Path="(Validation.Errors).CurrentItem.ErrorContent" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ComboBox" x:Key="UIComboBox">
            <Setter Property="FontSize" Value="{StaticResource UIFontSize}" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="MinWidth" Value="270" />
            <Setter Property="Height" Value="40" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
        <Style TargetType="Button" x:Key="BaseUIButton" x:Shared="false">
            <Setter Property="Width" Value="90" />
            <Setter Property="Height" Value="37" />
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="BorderBrush" Value="{StaticResource UnselectedControl}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="brd" BorderThickness="1" BorderBrush="{StaticResource UnselectedControl}" Background="{TemplateBinding Background}">
                            <TextBlock Name="tb" Style="{x:Null}" Text="{TemplateBinding Content}" TextAlignment="Center" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center"
                                       FontSize="16" FontWeight="Bold"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="brd" Property="BorderBrush" Value="{StaticResource SelectedControl}"/>
                                <!--<Setter TargetName="brd" Property="Background" Value="#FF98BEFF"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="tb" Property="Foreground" Value="Gray"/>
                                <Setter TargetName="brd" Property="BorderBrush" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleValid" x:Shared ="false">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsThreeState" Value="False"/>
           
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Name="brd" BorderThickness="1" BorderBrush="#FFC7C6C6" Background="White" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <TextBlock Style="{x:Null}" Name="tbc" Text="Действует" FontSize="{StaticResource UIFontSize}" FontWeight="DemiBold" 
                                       Foreground="GreenYellow" Margin="5,10,5,10" TextAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="brd" Property="BorderBrush" Value="#FF346DE8"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="tbc" Property="Text" Value="Не действует"/>
                                <Setter TargetName="tbc" Property="Foreground" Value="Red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="SearchButton" x:Shared="false">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Self}, Path=Width}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="brd" Width="{TemplateBinding Width}" Height="{TemplateBinding Width}" BorderThickness="1" BorderBrush="{StaticResource UnselectedControl}">
                            <Viewbox>
                                <Image Source="Resources\17.png"/>
                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="brd" Property="BorderBrush" Value="{StaticResource SelectedControl}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}" x:Key="SearchTextBox">
            <Setter Property="FontSize" Value="{StaticResource UIFontSize}" />
            <Setter Property="Width" Value="200" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Template" Value="{StaticResource tbAdditonText}" />
            <Setter Property="Tag" Value="Поиск" />
        </Style>
        <Style TargetType="{x:Type ToggleButton}" x:Key="ArrowToggle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Path Name="dd" StrokeThickness="3" Data="M0,0 14,7 0, 14 Z" Stretch="Fill" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5, 0.5">
                                <Path.RenderTransform>
                                    <RotateTransform x:Name="tr" Angle="0"/>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="tr" To="90" Duration="0:0:0.3" Storyboard.TargetProperty="Angle"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="tr" To="0" Duration="0:0:0.3" Storyboard.TargetProperty="Angle"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>